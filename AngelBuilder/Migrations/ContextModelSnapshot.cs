// <auto-generated />
using AngelBuilder;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AngelBuilder.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("AngelBuilder.Ability", b =>
                {
                    b.Property<string>("Ability_Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ability_Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ability_Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Ability_Id");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("AngelBuilder.Model", b =>
                {
                    b.Property<string>("Model_Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model_A")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model_BS")
                        .HasColumnType("TEXT");

                    b.Property<int>("Model_Def")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model_Ld")
                        .HasColumnType("TEXT");

                    b.Property<int>("Model_Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Model_Min")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model_Move")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model_Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Model_Points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model_S")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model_Sv")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model_T")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model_W")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model_WS")
                        .HasColumnType("TEXT");

                    b.HasKey("Model_Id");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("AngelBuilder.Unit", b =>
                {
                    b.Property<string>("Unit_Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Unit_Cat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Unit_Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Unit_Min")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit_Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Unit_Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("AngelBuilder.Weapon", b =>
                {
                    b.Property<string>("Weapon_Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model_Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Weapon_Abi")
                        .HasColumnType("TEXT");

                    b.Property<string>("Weapon_Ap")
                        .HasColumnType("TEXT");

                    b.Property<string>("Weapon_Dmg")
                        .HasColumnType("TEXT");

                    b.Property<string>("Weapon_Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Weapon_Points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Weapon_Range")
                        .HasColumnType("TEXT");

                    b.Property<string>("Weapon_S")
                        .HasColumnType("TEXT");

                    b.Property<string>("Weapon_Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Weapon_Id");

                    b.HasIndex("Model_Id");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("AngelBuilder.Weapon", b =>
                {
                    b.HasOne("AngelBuilder.Model", null)
                        .WithMany("Model_Weapons")
                        .HasForeignKey("Model_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
